
/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUBots <nubots@nubots.net>
 */
syntax = "proto3";

package message.vision.proto;

import "google/protobuf/timestamp.proto";
import "Neutron.proto";
import "Vector.proto";
import "Matrix.proto";
import "message/Geometry.proto";
import "message/input/proto/Sensors.proto";

message VisionObject {

    enum MeasurementType {
        UNKNOWN_MEASUREMENT = 0;
        LEFT_NORMAL         = 1;
        RIGHT_NORMAL        = 2;
        TOP_NORMAL          = 3;
        BASE_NORMAL         = 4;
    }
    message Measurement {
        vec3            position   = 1;
        mat33           covariance = 2;
        MeasurementType type       = 3;
    }

    message Goal {
        enum Side {
            UNKNOWN = 0;
            LEFT    = 1;
            RIGHT   = 2;
        }

        enum Team {
            UNKNOWN_TEAM = 0;
            OWN          = 1;
            OPPONENT     = 2;
        }

        Side                 side          = 1;
        Quad                 quad          = 2;
        repeated Measurement measurement   = 3;

        // The angular position and size from the perspective of the camera
        // Use these values to move the camera around to see this object
        vec2                 screenAngular = 4;
        vec2                 angularSize   = 5;
    }

    message Ball {
        Circle               circle             = 1;
        repeated Measurement measurement        = 2;
        repeated vec3        torsoSpacePosition = 3;
        repeated vec3        edgePoints         = 4;
    }

    message Obstacle {
        enum Team {
            UNKNOWN_TEAM = 0;
            MAGENTA      = 1;
            CYAN         = 2;
        }

        Polygon              shape       = 1;
        repeated Measurement measurement = 2;
        Team                 team        = 3;
    }

    message Line {
        ivec2 start = 1;
        ivec2 end   = 2;
        vec4 colour = 3;
    }

    enum ObjectType {
        UNKNOWN_OBJECT = 0;
        GOAL           = 1;
        BALL           = 2;
        OBSTACLE       = 3;
        LINE           = 4;
    }

    // Time the image was taken
    google.protobuf.Timestamp timestamp       = 1;

    // The sensor frame that was used to detect this object
    input.proto.Sensors       sensors         = 2 [(pointer) = SHARED];

    // The typye of the object.
    ObjectType                type            = 3;

    // Details about the object that was detected.
    repeated Goal             goal            = 4;
    repeated Ball             ball            = 5;
    repeated Obstacle         obstacle        = 6;
    repeated Line             line            = 7;

    // The camera which saw the object.
    uint32                    camera_id       = 8;
}

message VisionObjects {
    repeated VisionObject object = 1;
}
