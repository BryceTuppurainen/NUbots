/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUBots <nubots@nubots.net>
 */

syntax = "proto3";

package message.input;

import "google/protobuf/timestamp.proto";
import "Vector.proto";
import "Matrix.proto";

message Sensors {

    enum ServoID {
        R_SHOULDER_PITCH    = 0;
        L_SHOULDER_PITCH    = 1;
        R_SHOULDER_ROLL     = 2;
        L_SHOULDER_ROLL     = 3;
        R_ELBOW             = 4;
        L_ELBOW             = 5;
        R_HIP_YAW           = 6;
        L_HIP_YAW           = 7;
        R_HIP_ROLL          = 8;
        L_HIP_ROLL          = 9;
        R_HIP_PITCH         = 10;
        L_HIP_PITCH         = 11;
        R_KNEE              = 12;
        L_KNEE              = 13;
        R_ANKLE_PITCH       = 14;
        L_ANKLE_PITCH       = 15;
        R_ANKLE_ROLL        = 16;
        L_ANKLE_ROLL        = 17;
        HEAD_YAW            = 18;
        HEAD_PITCH          = 19;
        NUMBER_OF_SERVOS    = 20;
    }

    // Because you can't have a enum type as the key in a map.
    message ServoIDKinematicsMap {
        ServoID servoID    = 1;
        mat44   kinematics = 2;
    }

    message Servo {
        uint32 error_flags = 1;

        ServoID id = 2;

        bool enabled = 3;

        float p_gain = 4;
        float i_gain = 5;
        float d_gain = 6;

        float goal_position = 7;
        float goal_velocity = 8;

        float present_position = 9;
        float present_velocity = 10;

        float load = 11;
        float voltage = 12;
        float temperature = 13;
    }

    message Button {
        uint32 id = 1;
        bool value = 2;
    }

    message LED {
        uint32 id = 1;
        uint32 colour = 2;
    }

    message FSR {
        repeated float value = 1 [packed=true];
        vec2 centre = 2;
    }

    google.protobuf.Timestamp timestamp             = 1;
    vec3 accelerometer                              = 2;
    vec3 gyroscope                                  = 3;

    /// This is the transform from the odometry (world) space to robot space (=Htw). It measures the world in robot space.
    mat44 world                                     = 4;
    repeated FSR fsr                                = 5;
    repeated Servo servo                            = 6;
    repeated Button button                          = 7;
    repeated LED led                                = 8;
    float voltage                                   = 9;
    float battery                                   = 10;
    vec3 centreOfPressure                           = 11;
    mat22 robotToIMU                                = 12;

    /// Percentage of the left foot that's considered "down" i.e. if 3/4 FSR sensors have weight this is 0.75
    bool leftFootDown                               = 13;
    bool rightFootDown                              = 14;

    // Because you can't have a enum type as the key in a map.
    repeated ServoIDKinematicsMap forwardKinematics = 15;
    float bodyCentreHeight                          = 16;
    vec4 centreOfMass                               = 17;
    mat44 orientationBodyToGround                   = 18;
    mat44 orientationCamToGround                    = 19;
    mat44 kinematicsBodyToGround                    = 20;
    mat44 kinematicsCamToGround                     = 21;
}
