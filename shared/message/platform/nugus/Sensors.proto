/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUbots <nubots@nubots.net>
 */
syntax = "proto3";

package message.platform.nugus;

import "google/protobuf/timestamp.proto";

/**
 * TODO document
 *
 * @author Alex Biddulph
 */
message Sensors {
    // bitmask values
    enum Error {
        OK            = 0;  // not really a flag but the lack of any other flag
        INPUT_VOLTAGE = 1;
        ANGLE_LIMIT   = 2;
        OVERHEATING   = 4;
        RANGE         = 8;
        CHECKSUM      = 16;
        OVERLOAD      = 32;
        INSTRUCTION   = 64;
        CORRUPT_DATA  = 128;
        TIMEOUT       = 256;
    }

    message LEDPanel {
        bool led2 = 1;
        bool led3 = 2;
        bool led4 = 3;
    }

    message HeadLED {
        // Encode as 0x00 0xRR 0xGG 0xBB
        uint32 RGB = 1;
    }

    message EyeLED {
        // Encode as 0x00 0xRR 0xGG 0xBB
        uint32 RGB = 1;
    }

    message Buttons {
        bool left   = 1;
        bool middle = 2;
        bool right  = 3;
    }

    message Accelerometer {
        float x = 1;
        float y = 2;
        float z = 3;
    }

    message Gyroscope {
        float x = 1;
        float y = 2;
        float z = 3;
    }

    message Servo {
        uint32 errorFlags          = 1;
        bool   torqueEnabled       = 2;
        float  velocityPGain       = 3;
        float  velocityIGain       = 4;
        float  velocityDGain       = 5;
        float  positionPGain       = 6;
        float  positionIGain       = 7;
        float  feedforward1stGain  = 8;
        float  feedforward2ndGain  = 9;
        float  presentPWM          = 10;
        float  presentCurrent      = 11;
        float  presentVelocity     = 12;
        float  presentPosition     = 13;
        float  goalPWM             = 14;
        float  goalCurrent         = 15;
        float  goalVelocity        = 16;
        float  goalPosition        = 17;
        float  voltage             = 18;
        float  temperature         = 19;
        float  profileAcceleration = 20;
        float  profileVelocity     = 21;
    };

    message Servos {
        Servo rShoulderPitch = 1;
        Servo lShoulderPitch = 2;
        Servo rShoulderRoll  = 3;
        Servo lShoulderRoll  = 4;
        Servo rElbow         = 5;
        Servo lElbow         = 6;
        Servo rHipYaw        = 7;
        Servo lHipYaw        = 8;
        Servo rHipRoll       = 9;
        Servo lHipRoll       = 10;
        Servo rHipPitch      = 11;
        Servo lHipPitch      = 12;
        Servo rKnee          = 13;
        Servo lKnee          = 14;
        Servo rAnklePitch    = 15;
        Servo lAnklePitch    = 16;
        Servo rAnkleRoll     = 17;
        Servo lAnkleRoll     = 18;
        Servo headPan        = 19;
        Servo headTilt       = 20;
    }

    google.protobuf.Timestamp timestamp        = 1;
    uint32                    OpenCRErrorFlags = 2;
    LEDPanel                  ledPanel         = 3;
    HeadLED                   headLED          = 4;
    EyeLED                    eyeLED           = 5;
    Buttons                   buttons          = 6;
    Accelerometer             accelerometer    = 7;
    Gyroscope                 gyroscope        = 8;
    Servos                    servo            = 9;
    float                     battery          = 10;
}

// Button press events
message ButtonLeftDown {
}
message ButtonLeftUp {
}
message ButtonMiddleDown {
}
message ButtonMiddleUp {
}
